AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template can be used for creating S3'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: 'S3 Parameters'
          Parameters:
            - BucketName
            - Access
            - Versioning
            - NoncurrentVersionExpirationInDays
            - ExpirationInDays
            - ExpirationPrefix
Parameters:
    BucketName:
      Description: 'Name of the bucket.'
      Type: String
      Default: ''
    Access:
      Description: 'Access policy of the bucket.'
      Type: String
      Default: Private
      AllowedValues: [Private, PublicRead, CloudFrontRead, CloudFrontAccessLogWrite, ElbAccessLogWrite, ConfigWrite, CloudTrailWrite, VpcEndpointRead, FlowLogWrite]
    Versioning:
      Description: 'Enable versioning to keep a backup if objects change.'
      Type: String
      Default: false
      AllowedValues: [true, false, 'false-but-was-true']
    NoncurrentVersionExpirationInDays:
      Description: 'Remove non current object versions after days (set to 0 to disable).'
      Type: Number
      Default: 0
      MinValue: 0
    ExpirationInDays:
      Description: 'Remove objects after days (set to 0 to disable).'
      Type: Number
      Default: 1
      MinValue: 0
    ExpirationPrefix:
      Description: 'Optional key prefix for expiring objects.'
      Type: String
      Default: ''
Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, '']]
  HasVersioning: !Equals [!Ref Versioning, true]
  HadVersioning: !Equals [!Ref Versioning, 'false-but-was-true']
  HasExpirationInDays: !Not [!Equals [!Ref ExpirationInDays, 0]]
  HasExpirationPrefix: !Not [!Equals [!Ref ExpirationPrefix, '']]
Resources:
  Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      LifecycleConfiguration:
        Rules:
          - AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 2
            Status: Enabled
          - ExpirationInDays: !If [HasExpirationInDays, !Ref ExpirationInDays, 1]
            Prefix: !If [HasExpirationPrefix, !Ref ExpirationPrefix, !Ref 'AWS::NoValue']
            Status: !If [HasExpirationInDays, Enabled, Disabled]
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  BucketName:
    Description: 'Name of the bucket'
    Value: !Ref Bucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  BucketDomainName:
    Description: 'Domain name of the bucket.'
    Value: !GetAtt 'Bucket.DomainName'
    Export:
      Name: !Sub '${AWS::StackName}-BucketDomainName'