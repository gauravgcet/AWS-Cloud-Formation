AWSTemplateFormatVersion: '2010-09-09'
Description: 'high availability using multiple app instances'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  RegionMap:
    eu-west-2:
      AMI: ami-00a1896be20551dc8
Resources:
  ApplicationInstanceLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          sources:
            /var/tmp/: "https://home-test-2018.s3.eu-west-2.amazonaws.com/jar/hello.jar.zip"
            /tmp/: "https://home-test-2018.s3.eu-west-2.amazonaws.com/jar/hello.sh.zip"
          commands:
            alnservice:
              command: "ln -sf /tmp/hello.sh /etc/init.d/hello"
            changeowner:
              command: "chmod 744 /etc/init.d/hello"
            startservice:
              command: "service hello start &"
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - Ref: SSHSecurityGroup
        - Ref: SpringBootSecurityGroup
      KeyName:
        Ref: KeyName
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init --stack ${AWS::StackName} --region ${AWS::Region} --resource ApplicationInstanceLaunchConfig
          # Signal the status from cfn-init
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region} --resource ApplicationInstanceLaunchConfig
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp:
            Ref: SSHLocation
  SpringBootSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP port 8080
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp:
            Ref: SSHLocation
  AppLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones: !GetAZs ''
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '8080'
        Protocol: 'HTTP'
  AppScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs ''
      LaunchConfigurationName:
        Ref: ApplicationInstanceLaunchConfig
      MinSize: '1'
      MaxSize: '2'
      LoadBalancerNames:
        - Ref: AppLoadBalancer
